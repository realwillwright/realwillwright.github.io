[{"content":"To get the sspListId the following url will display it https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_api/web/lists/getbytitle('\u0026lt;list\u0026gt;')/fields?$filter=InternalName eq '\u0026lt;internalMetadataColumnName\u0026gt;'\nTo get the termSetList Id go to the TermStore Admin Centre There are 2 option to get there\nGo to Site Settings and under Site Administration select Term store management https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_layouts/15/SiteAdmin.aspx#/termStoreAdminCenter Selec the termset you are using and under unique identifier there is the termSetList Id\n","date":"22 January 2022","permalink":"/posts/get-ssplist-and-termsetlist/","section":"Posts","summary":"To get the sspListId the following url will display it https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_api/web/lists/getbytitle('\u0026lt;list\u0026gt;')/fields?$filter=InternalName eq '\u0026lt;internalMetadataColumnName\u0026gt;'\nTo get the termSetList Id go to the TermStore Admin Centre There are 2 option to get there","title":"Get the SSPList Id and termSetItem Id"},{"content":"This is my guide for patching SharePoint items using the SharePoint REST API. All code can be copied and pasted into the body. Method, Uri and Headers will need to be different depending on whether you\u0026rsquo;re creating or updating an item. All Methods, Uri and Headers are provided below.\nYou can get the sp.listitem code from _api/web/lists/GetByTitle('\u0026lt;ListName\u0026gt;')\nGet ssplist from https://\u0026lt;Tenant\u0026gt;.sharepoint.com/sites/\u0026lt;ListName\u0026gt;/_api/web/lists/getbytitle('\u0026lt;list title\u0026gt;')/fields?$filter=InternalName eq '\u0026lt;managed metadata name\u0026gt;'\nUpdate Exisiting Item # Method # Patch\nUri # _api/web/lists/getbytitle('\u0026lt;ListName\u0026gt;')/items('ItemId')\nHeaders # content-type: application/json;odata=verbose X-HTTP-Method: MERGE IF_MATCH: * Create New Item # Method # Post\nUri # _api/web/lists/getbytitle('\u0026lt;ListName\u0026gt;')/items\nHeaders # content-type: application/json;odata=verbose accept: application/json;odata=verbose X-RequestDigest: $(\u0026#34;#__REQUESTDIGEST\u0026#34;).val() ","date":"18 January 2022","permalink":"/posts/send-http-request-to-sharepoint/","section":"Posts","summary":"This is my guide for patching SharePoint items using the SharePoint REST API. All code can be copied and pasted into the body. Method, Uri and Headers will need to be different depending on whether you\u0026rsquo;re creating or updating an item.","title":"Sending an HTTP request to SharePoint"},{"content":"To update a choice column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;Choice\u0026#39;: \u0026#39;Choice #1\u0026#39; } ","date":"18 January 2022","permalink":"/posts/update-choice-column-in-sharepoint/","section":"Posts","summary":"To update a choice column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values","title":"Update Choice Column in SharePoint using REST API"},{"content":"To update a date column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;Date\u0026#39;: `utcNow()` } The date must be in a valid format to be accepted by SharePoint\n","date":"18 January 2022","permalink":"/posts/update-date-column-in-sharepoint/","section":"Posts","summary":"To update a date column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values","title":"Update Date Column in SharePoint using REST API"},{"content":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;Title\u0026#39;: \u0026#39;single line of text\u0026#39; } ","date":"18 January 2022","permalink":"/posts/update-lookup-column-in-sharepoint/","section":"Posts","summary":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.","title":"Update Lookup Column in SharePoint using REST API"},{"content":"To update a managed metatdata column within a SharePoint list using the SharePoint REST API action in Flow. Add the following to the sections Method, Uri, Header and Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nMethod Post\nUri _api/web/lists/getbytitle('\u0026lt;listName\u0026gt;')/items(\u0026lt;itemId\u0026gt;)/ValidateUpdateListItem()\nHeaders\ncontent-type: application/json;odata=verbose accept: application/json;odata=verbose To get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;formValues\u0026#39;: [ {\u0026#39;FieldName\u0026#39;:\u0026#39;MultiManagedMetadata\u0026#39;, \u0026#39;FieldValue\u0026#39;:\u0026#39;Term 1|00000000-0000-0000-0000-000000000001}] } Term 1 is name of the term which the GUID is the Id of the term\nTo get the GUID for the term you can use another HTTP request action using Post and the Uri of _vti_bin/TaxonomyInternalService.json/GetSuggestions and the Body\n{\u0026#39;start\u0026#39;:\u0026#39;Term 1\u0026#39;, \u0026#39;lcid\u0026#39;:1033, \u0026#39;sspList\u0026#39;:\u0026#39;\u0026lt;sspList\u0026gt;\u0026#39;, \u0026#39;termSetList\u0026#39;:\u0026#39;\u0026lt;termSetList\u0026gt;\u0026#39;, \u0026#39;anchorId\u0026#39;:\u0026#39;00000000-0000-0000-0000-000000000000\u0026#39;, \u0026#39;isSpanTermStores\u0026#39;:false, \u0026#39;isSpanTermSets\u0026#39;:false, \u0026#39;isIncludeUnavailable\u0026#39;:false, \u0026#39;isIncludeDeprecated\u0026#39;:false, \u0026#39;isAddTerms\u0026#39;:false, \u0026#39;isIncludePathData\u0026#39;:false, \u0026#39;excludeKeyword\u0026#39;:false, \u0026#39;excludedTermset\u0026#39;:\u0026#39;00000000-0000-0000-0000-000000000000\u0026#39;} To get the sspListId the following url will display it https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_api/web/lists/getbytitle('\u0026lt;list\u0026gt;')/fields?$filter=InternalName eq '\u0026lt;internalMetadataColumnName\u0026gt;'\nTo get the termSetList Id go to the TermStore Admin Centre https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_layouts/15/SiteAdmin.aspx#/termStoreAdminCenter\n","date":"18 January 2022","permalink":"/posts/update-managed-metadata-column-in-sharepoint/","section":"Posts","summary":"To update a managed metatdata column within a SharePoint list using the SharePoint REST API action in Flow. Add the following to the sections Method, Uri, Header and Body of the action.","title":"Update Managed Metadata Column in SharePoint using REST API"},{"content":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;multiChoice\u0026#39;: { \u0026#39;results\u0026#39;: [\u0026#39;Choice #1\u0026#39;, \u0026#39;Choice #2\u0026#39;]}, } The format for multiple entries must be ['Choice #1', 'Choice #2']. If you need to blank or leave empty use '' in place of the choice.\n","date":"18 January 2022","permalink":"/posts/update-multi-choice-column-in-sharepoint/","section":"Posts","summary":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.","title":"Update Multi Choice Column in SharePoint using REST API"},{"content":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;Title\u0026#39;: \u0026#39;single line of text\u0026#39; } ","date":"18 January 2022","permalink":"/posts/update-multi-lookup-column-in-sharepoint/","section":"Posts","summary":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.","title":"Update Multi Lookup Column in SharePoint using REST API"},{"content":"To update a multi managed metatdata column within a SharePoint list using the SharePoint REST API action in Flow. Add the following to the sections Method, Uri, Header and Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nMethod Post\nUri _api/web/lists/getbytitle('\u0026lt;listName\u0026gt;')/items(\u0026lt;itemId\u0026gt;)/ValidateUpdateListItem()\nHeaders\ncontent-type: application/json;odata=verbose accept: application/json;odata=verbose To get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;formValues\u0026#39;: [ {\u0026#39;FieldName\u0026#39;:\u0026#39;MultiManagedMetadata\u0026#39;, \u0026#39;FieldValue\u0026#39;:\u0026#39;Term 1|00000000-0000-0000-0000-000000000001;Term 2|00000000-0000-0000-0000-000000000002\u0026#39;}] } FieldName is the internal name of the columns FieldValue is the format the contents of the field it needs to be in the format Term|GUID;Term|GUID Term 1 is name of the term whilst the GUID is the Id of the term\nTo get the GUID for the term you can use another HTTP request action using Post and the Uri of _vti_bin/TaxonomyInternalService.json/GetSuggestions and the Body\n{\u0026#39;start\u0026#39;:\u0026#39;Term 1\u0026#39;, \u0026#39;lcid\u0026#39;:1033, \u0026#39;sspList\u0026#39;:\u0026#39;\u0026lt;sspList\u0026gt;\u0026#39;, \u0026#39;termSetList\u0026#39;:\u0026#39;\u0026lt;termSetList\u0026gt;\u0026#39;, \u0026#39;anchorId\u0026#39;:\u0026#39;00000000-0000-0000-0000-000000000000\u0026#39;, \u0026#39;isSpanTermStores\u0026#39;:false, \u0026#39;isSpanTermSets\u0026#39;:false, \u0026#39;isIncludeUnavailable\u0026#39;:false, \u0026#39;isIncludeDeprecated\u0026#39;:false, \u0026#39;isAddTerms\u0026#39;:false, \u0026#39;isIncludePathData\u0026#39;:false, \u0026#39;excludeKeyword\u0026#39;:false, \u0026#39;excludedTermset\u0026#39;:\u0026#39;00000000-0000-0000-0000-000000000000\u0026#39;} To get the sspListId the following url will display it https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_api/web/lists/getbytitle('\u0026lt;list\u0026gt;')/fields?$filter=InternalName eq '\u0026lt;internalMetadataColumnName\u0026gt;'\nTo get the termSetList Id go to the TermStore Admin Centre https://\u0026lt;tenant\u0026gt;.sharepoint.com/sites/\u0026lt;site\u0026gt;/_layouts/15/SiteAdmin.aspx#/termStoreAdminCenter\n","date":"18 January 2022","permalink":"/posts/update-multi-managed-metadata-column-in-sharepoint/","section":"Posts","summary":"To update a multi managed metatdata column within a SharePoint list using the SharePoint REST API action in Flow. Add the following to the sections Method, Uri, Header and Body of the action.","title":"Update Multiple Managed Metadata Column in SharePoint using REST API"},{"content":"To update a person column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;PersonsId\u0026#39;: { \u0026#39;results\u0026#39;: [0]} } Note \u0026lsquo;Id\u0026rsquo; is added to the internal name of the SharePoint column.\nThe number required is the SharePoint Id of the person or group. To get this Id you can use the action Get items and use the hidden SharePoint list User Information List. Use the oData filter and filter on Email using the person email address. The format for multiple entries must be [1,2,3,4]. If you need to blank or leave empty use 0 in place of the Id.\n","date":"18 January 2022","permalink":"/posts/update-multi-person-column-in-sharepoint/","section":"Posts","summary":"To update a person column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values","title":"Update Multiple Person Column in SharePoint using REST API"},{"content":"To update a person column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;PersonId\u0026#39;: \u0026#39;-1\u0026#39; } Note \u0026lsquo;Id\u0026rsquo; is added to the internal name of the SharePoint column.\nThe number required is the SharePoint Id of the person or group. To get this Id you can use the action Get items and use the hidden SharePoint list User Information List. Use the oData filter and filter on Email using the persons email address. To avoid an Apply to each action use the formula first(body('Get_author_information')?['value'])?['Id']. If you need to blank or leave empty use -1 in place of the Id.\n","date":"18 January 2022","permalink":"/posts/update-person-column-in-sharepoint/","section":"Posts","summary":"To update a person column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values","title":"Update Person Column in SharePoint using REST API"},{"content":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.\u0026lt;ListName\u0026gt;ListItem\u0026#39; }, \u0026#39;Title\u0026#39;: \u0026#39;single line of text\u0026#39; } ","date":"18 January 2022","permalink":"/posts/update-single-line-of-text-column-in-sharepoint/","section":"Posts","summary":"To update a single line of text column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.","title":"Update Single Line of Text Column in SharePoint using REST API"},{"content":"To update a url column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values\nTo get the value for the __metadata type use the following url _api/web/lists/GetByTitle('\u0026lt;list\u0026gt;')\n{ \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.Data.PILDatabaseListItem\u0026#39; }, \u0026#39;Url\u0026#39;: { \u0026#39;__metadata\u0026#39;: { \u0026#39;type\u0026#39;: \u0026#39;SP.FieldUrlValue\u0026#39; }, \u0026#39;Description\u0026#39;: \u0026#39;What you want the link to say\u0026#39;, \u0026#39;Url\u0026#39;: \u0026#39;Link to the item/site\u0026#39;} } ","date":"18 January 2022","permalink":"/posts/update-url-column-in-sharepoint/","section":"Posts","summary":"To update a url column within a SharePoint list using the SharePoint REST API action in Flow. Add the following code to the Body of the action.\nIn any of the examples below anything in between \u0026lt;\u0026gt; will need to be updated with actual values","title":"Update URL Column in SharePoint using REST API"},{"content":"We all know the scenario, a managed solution has been imported but one of the variables has been set incorrectly. How do I go and update this to the correct value? Within Dataverse there are 2 tables called \u0026lsquo;Environment Variable Value\u0026rsquo; and \u0026lsquo;Environment Variable Definition\u0026rsquo; these store the value of each variable and the definition of the variable respectively. The following guides will explain how to build a canvas app and/or a Flow to update the values only.\nThe two guides documented below are:\nUpdate variables in Dataverse using a canvas app Example App Update variables in Dataverse using Power Automate Example Flow You can of course go into each table and update them manually.\nUsing a Canvas App # The canvas app will only find and update variables in the environment the app is in. The three main controls used in the app are:\nGallery Edit Form Button Create a new app using the tablet format Add the two Dataverse tables called \u0026lsquo;Environment Variable Value\u0026rsquo; and \u0026lsquo;Environment Variable Definition\u0026rsquo; as datasources Add a gallery to the screen and set the datasource as \u0026lsquo;Environment Variable Definition\u0026rsquo; Set the following properties as below X: 0 Width: 700 Change the layout of the gallery to \u0026lsquo;Title and subtitle\u0026rsquo; In the gallery select the title control and update the text to ThisItem.\u0026#39;Display Name\u0026#39; Add an Edit Form and use \u0026lsquo;Environment Variable Value\u0026rsquo; as the datasource Set the following properties as below X: 700 Width: Parent.Width - Self.X Item: LookUp(\u0026#39;Environment Variable Values\u0026#39;, \u0026#39;Environment Variable Definition\u0026#39;.\u0026#39;Environment Variable Definition\u0026#39; = Gallery1.Selected.\u0026#39;Environment Variable Definition\u0026#39;) In the Form add the following controls in order Created On Value (value is the part to be updated) Finally add a button control Update the OnSelect function to SubmitForm(Form1) Your app should be similar to the image below\nYou can now test the app in preview mode. Selecting an item in the galley making sure the form gets populated. Update the value to the required value and finally press the button.\nUsing a Power Automate Flow # This guide explains how to create a manually triggered instant cloud flow to update environment variables. There will be 2 inputs to add both of which will be text.\nName of the variable to update Value to update the variable to To create the Flow we will use the actions\nManually trigger a flow List rows (x2) Compose Update Rows Create a new instant cloud flow with the \u0026lsquo;Manually trigger a flow\u0026rsquo; trigger and give it a name Within the trigger add two text outputs Variable Name New Value Add the Dataverse action \u0026lsquo;List rows\u0026rsquo; Rename to \u0026lsquo;List row from definition table\u0026rsquo; Table name = Environment Variable Definitions Filter rows = displayname eq \u0026lsquo;Variable Name\u0026rsquo; from trigger Add a \u0026lsquo;Compose\u0026rsquo; action Rename to \u0026lsquo;Compose schema name\u0026rsquo; Inputs = first(body(\u0026lsquo;List_row_from_definition_table\u0026rsquo;)?[\u0026lsquo;value\u0026rsquo;])?[\u0026lsquo;schemaname\u0026rsquo;] first(body(\u0026#39;List_row_from_definition_table\u0026#39;)?[\u0026#39;value\u0026#39;])?[\u0026#39;schemaname\u0026#39;] Add the Dataverse action \u0026lsquo;List rows\u0026rsquo; Rename to \u0026lsquo;List row from value table\u0026rsquo; Table name = Environment Variable Values Filter rows = schemaname eq \u0026lsquo;Output\u0026rsquo; from \u0026lsquo;Compose schema name\u0026rsquo; Add the Dataverse action \u0026lsquo;Update a row\u0026rsquo; Rename to \u0026lsquo;Update value in value table\u0026rsquo; Table name = Environment Variable Values Row ID = first(body(\u0026lsquo;List_row_from_value_table\u0026rsquo;)?[\u0026lsquo;value\u0026rsquo;])?[\u0026rsquo;environmentvariablevalueid\u0026rsquo;] Schema name = \u0026lsquo;Output\u0026rsquo; from \u0026lsquo;Compose schema name\u0026rsquo; Value = \u0026lsquo;New Value\u0026rsquo; from trigger first(body(\u0026#39;List_row_from_value_table\u0026#39;)?[\u0026#39;value\u0026#39;])?[\u0026#39;environmentvariablevalueid\u0026#39;] Your flow should be similar to the image below\nOnce complete you can start testing your flow. Click \u0026lsquo;Test\u0026rsquo; and select \u0026lsquo;Manually\u0026rsquo; from the menu and press \u0026lsquo;Test\u0026rsquo;. Enter your variable name as well as the value to update it to and press \u0026lsquo;Run flow\u0026rsquo;.\n","date":"17 January 2022","permalink":"/posts/update-environment-variables/","section":"Posts","summary":"We all know the scenario, a managed solution has been imported but one of the variables has been set incorrectly. How do I go and update this to the correct value?","title":"Update Environment Variables"},{"content":"","date":"21 May 2023","permalink":"/visuals/","section":"","summary":"","title":""},{"content":"\rSimple, yet powerful. Learn how to use Blowfish and its features.\r2024\r11 - 13 JUNE\r11 - 13 JUNE\r#EPPC24\nEuropean Power Platform Conference Brussels 2024 13 - 14 OCTOBER\r2023\r13 - 14 OCTOBER\r#SCS2023\nSouth Coast Summit 2023\r2023\r03 - 05 OCTOBER\r03 - 05 OCTOBER\r#MPPC23\nMicrosoft Power Platform Conference Vegas 2023\r20 - 22 JUNE\r2023\r20 - 22 JUNE\r#EPPC23\nEuropean Power Platform Conference Dublin 2023 2022\r13 - 15 OCTOBER\r13 - 15 OCTOBER\r#SCS2022\nSouth Coast Summit 2022\r","date":"21 May 2023","permalink":"/visuals/timeline/","section":"","summary":"A timeline of my sculpts","title":"Timeline"},{"content":"This is a demo site built entirely using Blowfish. It also contains a complete set of theme documentation. Blowfish is flexible and is great for both static page-based content (like this demo) or a traditional blog with a feed of recent posts.\n","date":"21 May 2023","permalink":"/","section":"Welcome to Blowfish! 🎉","summary":"This is a demo site built entirely using Blowfish. It also contains a complete set of theme documentation. Blowfish is flexible and is great for both static page-based content (like this demo) or a traditional blog with a feed of recent posts.","title":"Welcome to Blowfish! 🎉"},{"content":"Recipes, guides, and tutorials for Blowfish\n2023 # ","date":"16 May 2023","permalink":"/visuals/gallery/","section":"","summary":"Recipes, guides, and tutorials for Blowfish\n2023 # ","title":"Gallery"},{"content":"\rSimple, yet powerful. Learn how to use Blowfish and its features.\r","date":"13 June 2022","permalink":"/posts/","section":"Posts","summary":"\rSimple, yet powerful. Learn how to use Blowfish and its features.\r","title":"Posts"},{"content":"A quick example of how to start using author taxonomies in your articles.\n","date":"22 January 2022","permalink":"/authors/","section":"Authors Taxonomy Listing Example","summary":"A quick example of how to start using author taxonomies in your articles.","title":"Authors Taxonomy Listing Example"},{"content":"","date":"22 January 2022","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"22 January 2022","permalink":"/tags/flow/","section":"Tags","summary":"","title":"Flow"},{"content":"","date":"22 January 2022","permalink":"/tags/managed-metadata/","section":"Tags","summary":"","title":"Managed metadata"},{"content":"","date":"22 January 2022","permalink":"/categories/power-automate/","section":"Categories","summary":"","title":"Power Automate"},{"content":"","date":"22 January 2022","permalink":"/categories/sharepoint/","section":"Categories","summary":"","title":"SharePoint"},{"content":"Blowfish has full support for Hugo taxonomies and will adapt to any taxonomy set up. Taxonomy listings like this one also support custom content to be displayed above the list of terms.\nThis area could be used to add some extra decriptive text to each taxonomy. Check out the advanced tag below to see how to take this concept even further.\n","date":"22 January 2022","permalink":"/tags/","section":"Tags","summary":"Blowfish has full support for Hugo taxonomies and will adapt to any taxonomy set up. Taxonomy listings like this one also support custom content to be displayed above the list of terms.","title":"Tags"},{"content":"","date":"22 January 2022","permalink":"/tags/term-store/","section":"Tags","summary":"","title":"Term store"},{"content":"Will\u0026rsquo;s awesome dummy bio.\n","date":"22 January 2022","permalink":"/authors/willwright/","section":"Authors Taxonomy Listing Example","summary":"Will\u0026rsquo;s awesome dummy bio.","title":"Will Wright"},{"content":"","date":"18 January 2022","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"18 January 2022","permalink":"/series/sharepoint-rest-api/","section":"Series","summary":"","title":"SharePoint REST API"},{"content":"","date":"17 January 2022","permalink":"/series/blog/","section":"Series","summary":"","title":"Blog"},{"content":"","date":"17 January 2022","permalink":"/categories/canvas-apps/","section":"Categories","summary":"","title":"Canvas Apps"},{"content":"","date":"17 January 2022","permalink":"/categories/dataverse/","section":"Categories","summary":"","title":"Dataverse"},{"content":"","date":"17 January 2022","permalink":"/tags/environment-variables/","section":"Tags","summary":"","title":"Environment Variables"},{"content":"","date":"14 August 2020","permalink":"/tags/sample/","section":"Tags","summary":"","title":"sample"},{"content":"","date":"14 August 2020","permalink":"/tags/users/","section":"Tags","summary":"","title":"users"},{"content":"Real websites that are built with Blowfish. Check the full list in JSON format.\nBlowfish user? To add your site to this list, submit a pull request.\r","date":"14 August 2020","permalink":"/users/","section":"Users","summary":"Real websites that are built with Blowfish. Check the full list in JSON format.\nBlowfish user? To add your site to this list, submit a pull request.\r","title":"Users"},{"content":"\rSee what\u0026rsquo;s possible with Blowfish.\rThis section contains links to example templates and pages created using Blowfish to get you inspired.\n","date":"24 January 2019","permalink":"/examples/","section":"External Posts","summary":"See what\u0026rsquo;s possible with Blowfish.\rThis section contains links to example templates and pages created using Blowfish to get you inspired.","title":"External Posts"},{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. 🚀\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","date":"1 January 0001","permalink":"/tags/advanced/","section":"Tags","summary":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing.","title":"Advanced"},{"content":"\rSimple, yet powerful. Learn how to use Blowfish and its features.\r","date":"1 January 0001","permalink":"/docs/","section":"Documents","summary":"\rSimple, yet powerful. Learn how to use Blowfish and its features.\r","title":"Documents"},{"content":"\rRecipes, guides, and tutorials for Blowfish\r","date":"1 January 0001","permalink":"/external/","section":"External Articles","summary":"\rRecipes, guides, and tutorials for Blowfish\r","title":"External Articles"},{"content":"\rRecipes, guides, and tutorials for Blowfish\r","date":"1 January 0001","permalink":"/guides/","section":"Recipes","summary":"\rRecipes, guides, and tutorials for Blowfish\r","title":"Recipes"},{"content":"\rBlowfish brings your content to life. 😍\rSidenote: This page is just a standard Blowfish article listing and Hugo has been configured to generate a samples content type and display article summaries.\n","date":"1 January 0001","permalink":"/samples/","section":"Samples","summary":"Blowfish brings your content to life. 😍\rSidenote: This page is just a standard Blowfish article listing and Hugo has been configured to generate a samples content type and display article summaries.","title":"Samples"},{"content":"\rMatcha 2019 OCT\rMYOU Matcha\rOrdered in-stock from JunkySpot\rYuna 2019 DEC\rFairyland PukiFee Rosanna\rOrdered in-stock from Denver Doll Emporium\rWinry Lin 2020 MAY\rIplhouse Aria\rOrdered directly from Iplehouse Wait time: 4 Months\rLoxley Greene 2020 SEP\rIplhouse Dean\rOrdered directly from Iplehouse Wait time: 3 Months\rSeren Huang 2020 NOV\rIplhouse Yui\rOrdered directly from Iplehouse Wait time: 2 Months\r","date":"1 January 0001","permalink":"/visuals/collection-timeline/","section":"","summary":"\rMatcha 2019 OCT\rMYOU Matcha\rOrdered in-stock from JunkySpot\rYuna 2019 DEC\rFairyland PukiFee Rosanna\rOrdered in-stock from Denver Doll Emporium\rWinry Lin 2020 MAY\rIplhouse Aria\rOrdered directly from Iplehouse Wait time: 4 Months\rLoxley Greene 2020 SEP\rIplhouse Dean\rOrdered directly from Iplehouse Wait time: 3 Months\rSeren Huang 2020 NOV\rIplhouse Yui\rOrdered directly from Iplehouse Wait time: 2 Months\r","title":"Timeline"}]